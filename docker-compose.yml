version: '3.2'
services:
  chronograf:
    restart: always
    image: chronograf
    networks:
      backend:
    ports:
      - "8888:8888"
    environment: 
      influxdb-url: "http://db:8086"
    volumes:
      - chronograf:/var/lib/chronograf

  influxdb:
    restart: always
    image: influxdb
    networks:
      backend:
        aliases: 
          - db
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_ADMIN_USER: "${DB_ROOT_USER}"
      INFLUXDB_ADMIN_PASSWORD: "${DB_ROOT_PW}"
      INFLUXDB_DB: "${DB_NAME}"
      INFLUXDB_USER: "${DB_USER}"
      INFLUXDB_USER_PASSWORD: "${DB_PW}"
      INFLUX_SKIP_DATABASE_CREATION: "true"
      INFLUXDB_HTTP_FLUX_ENABLED: "true"
    volumes:
      - influxdb:/var/lib/influxdb

  broker:
    restart: always
    image: eclipse-mosquitto
    networks:
      backend:
        aliases:
          - "broker"
    ports:
      - "1883:1883"
      - "9001:9001"
  
  telegraf:
    restart: always
    image: telegraf
    networks:
      backend:
    volumes:
      - "./telegraf.conf:/etc/telegraf/telegraf.conf:ro"
    depends_on: 
      - broker
      - influxdb
    environment:
      INFLUX_URL: db
      INFLUXDB_DB: "${DB_NAME}"
      INFLUXDB_USER: "${DB_USER}"
      INFLUXDB_USER_PASSWORD: "${DB_PW}"

  api:
    restart: always
    build:
      context: api
    ports:
      - "5000:5000"
    networks:
      - backend
    depends_on:
      - influxdb
      - broker
    volumes:
      - "./api:/usr/src/app"
    environment: 
      INFLUXDB_BUCKET: "${DB_NAME}"
      INFLUXDB_V2_URL: "http://db:8086"
      # INFLUXDB_V2_ORG: "${DB_NAME}"
      INFLUXDB_V2_TOKEN: "${DB_USER}:${DB_PW}"
      # INFLUXDB_V2_TIMEOUT: 10000

networks:
  backend:
volumes:
  influxdb:
  chronograf: